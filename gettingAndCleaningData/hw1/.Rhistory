source("rankhospital.R")
rankhospital("MN", "heart attack", 5000)
source("rankhospital.R")
rankhospital("MN", "heart attack", 5000)
source("rankhospital.R")
rankhospital("MN", "heart attack", 5000)
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
return 1
return(1)
?return
test <- function(x) {return(x + 1)}
test(5)
source("rankhospital.R")
rankhospital("MN", "heart attack", 5000)
head(outcome_data[c("Hospital.Name", Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)])
head(outcome_data[c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack")])
ls()
source("rankall.R")
source("rankall.R")
head(rankall("heart attack", 20), 10)
rankhospital("AL", "heart attack", 20)
result <- c("hospital", "state")
result
result <- rbind(result, c(rankhospital("AL", "heart attack", 20), "AL"))
result
result <- rbind(result, c(rankhospital("AK", "heart attack", 20), "AK"))
rankhospital("AK", "heart attack", 20)
head(outcome_data$State)
order.ha <- order(outcome_data[11])
ordered_state_data <- subset(outcome_data[order.ha, ], State == state)
count <- num
ucount <- 0
dcount <- count
count <- 20
ucount <- 0
dcount <- count
ordered_state_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack[2-]
ordered_state_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack[20]
while (ordered_state_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack[count] == ordered_state_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack[count + 1]) {
dcount <- dcount + 1
count <- dcount
}
count
dcount
count <- num
count <- 20
while (ordered_state_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack[count] == ordered_state_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack[count - 1]) {
ucount <- ucount + 1
count <- count - 1
}
dcount
ucount
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MD", "heart attack", "worst")
ordered_state_data <- subset(ordered_state_data, !is.na(ordered_state_data[11]))
count <- length(ordered_state_data$Hospital.Name)
while (ordered_state_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack[count] == ordered_state_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack[count - 1]) {
count <- count - 1
}
if (count == length(ordered_state_data$Hospital.Name)) {
result <- as.character(ordered_state_data$Hospital.Name[count])
}
count
length(ordered_state_data$Hospital.Name)
result <- as.character(ordered_state_data$Hospital.Name[count])
result
state
state <- "MD"
result <- as.character(ordered_state_data$Hospital.Name[count])
result
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
state
outcome_data <- read.csv("outcome-of-care-measures.csv", na.strings = "Not Available")
is.numeric(ab)
is.numeric("AV")
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source("rankall.R")
head(rankall("heart attack", 20), 10)
rankhospital("AK", "heart attack", 20)
outcome_data <- read.csv("outcome-of-care-measures.csv", na.strings = "Not Available")
if (is.numeric(20) && 20 > length(outcome_data$Hospital.Name)) {
return(NA)
}
states_abb <- c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY")
state <- toupper(state)
outcome <- tolower("heart attack")
order.ha <- order(outcome_data[11])
ordered_state_data <- subset(outcome_data[order.ha, ], State == state)
ordered_state_data <- subset(ordered_state_data, !is.na(ordered_state_data[11]))
head(ordered_state_data)
ordered_state_data <- subset(outcome_data[order.ha, ], State == "AK")
head(ordered_state_data)
count <- length(ordered_state_data$Hospital.Name)
count
ordered_state_data <- subset(outcome_data[order.ha, ], State == state)
head(ordered_state_data)
ordered_state_data <- subset(outcome_data[order.ha, ], State == "AK")
head(ordered_state_data)
length(ordered_state_data$Hospital.Name)
rankhospital("AK", "heart attack", 20)
source("rankhospital.R")
rankhospital("AK", "heart attack", 20)
source("rankhospital.R")
rankhospital("AK", "heart attack", 20)
source("rankhospital.R")
rankhospital("AK", "heart attack", 20)
source("rankhospital.R")
rankhospital("AK", "heart attack", 20)
rankhospital("AK", "heart attack", 20)
source("rankhospital.R")
rankhospital("AK", "heart attack", 20)
source("rankhospital.R")
rankhospital("AK", "heart attack", 20)
source("rankhospital.R")
rankhospital("AK", "heart attack", 20)
source("rankhospital.R")
rankhospital("AK", "heart attack", 20)
source("rankhospital.R")
rankhospital("AK", "heart attack", 20)
rankhospital("AK", "heart attack", 20)
outcome_data <- read.csv("outcome-of-care-measures.csv", na.strings = "Not Available")
state <- "AK"
order.ha <- order(outcome_data[11])
ordered_state_data <- subset(outcome_data[order.ha, ], State == state)
num <- 20
num > length(ordered_state_data
)
count <- num
count
ucount <- 0
dcount <- count
ordered_state_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack[count]
ordered_state_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack[count + 1]
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
NA == 2
NA || FALSE
as.logical(NA)
is.na(FALSE)
is.na(TRUE)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
order.ha <- order(outcome_data[11])
ordered_state_data <- subset(outcome_data[order.ha, ], State == "MD")
num > length(ordered_state_data)
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
outcome_data <- read.csv("outcome-of-care-measures.csv", na.strings = "Not Available")
order.ha <- order(outcome_data[11])
ordered_state_data <- subset(outcome_data[order.ha, ], State == "MD")
lengthnum > length(ordered_state_data)
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
rankhospital("AK", "heart attack", 20)
source("rankall.R")
source("rankall.R")
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
quit()
rankhospital("NH", "heart attack", 20)
rankhospital("AKK", "heart attack", 20)
rankhospital("AK", "heart attack", 20)
rankhospital("NH", "heart attack", 20)
outcome_data <- read.csv("outcome-of-care-measures.csv", na.strings = "Not Available")
order.ha <- order(outcome_data[11])
ordered_state_data <- subset(outcome_data[order.ha, ], State == "NH")
count <- 20
ucount <- 0
dcount <- count
!is.na(ordered_state_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack[count]
)
ordered_state_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack[20]
ordered_state_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack[21]
length(ordered_state_data$Hospital.Name)
?order
outcome_data <- read.csv("outcome-of-care-measures.csv", na.strings = "Not Available")
order.ha <- order(outcome_data[11])
ordered_state_data <- outcome_data[order.ha, ]
head(ordered_state_data)
order.ha.name <- order(outcome_data[11], outcome_data$Hospital.Name)
ordered_state_data2 <- outcome_data[order.ha.name, ]
head(ordered_state_data2)
attach(mtcars)
ls()
mtcars
newdata <- mtcars[order(mpg),]
newdata
newdata2 <- mtcars[order(mpg, cyl),]
newdata2
order.ha.name <- order(outcome_data[11], outcome_data$Hospital.Name)
ordered_state_data2 <- outcome_data[order.ha.name, ]
head(ordered_state_data2)
outcome_data <- read.csv("outcome-of-care-measures.csv", na.strings = "Not Available")
head(outcome_data)
order.ha.name <- order(outcome_data[11], outcome_data$Hospital.Name)
head(order.ha.name)
ordered_outcome_data <- outcome_data[order.ha.name, ]
head(ordered_outcome_data)
head(ordered_outcome_data$State)
ordered_state_data <- subset(ordered_outcome_data, State == "TX")
head(ordered_state_data)
ordered_state_data$Hospital.Name
ordered_state_data$Hospital.Name[1]
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MD", "heart attack", "worst")
outcome_data <- read.csv("outcome-of-care-measures.csv", na.strings = "Not Available")
order.ha.name <- order(outcome_data[11], outcome_data$Hospital.Name)
ordered_outcome_data <- outcome_data[order.ha.name, ]
tail(ordered_outcome_data)
outcome_data <- subset(outcome_data, !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
tail(outcome_data)
outcome_data_original <- read.csv("outcome-of-care-measures.csv", na.strings = "Not Available")
tail(outcome_data)
tail(outcome_data_original)
?subset
names(outcome_data_original)
outcome_data_original <- read.csv("outcome-of-care-measures.csv", na.strings = "Not Available")
str(outcome_data_original)
outcome_data <- subset(outcome_data_original, !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure), !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
outcome_data <- subset(outcome_data_original, !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
outcome_data <- subset(outcome_data_original, !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure), !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
outcome_data <- subset(outcome_data_original, !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
outcome_data <- subset(outcome_data_original, !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure), !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
outcome_data <- subset(outcome_data_original, !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure), !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
tail(outcome_data)
outcome_data <- subset(outcome_data_original, !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia), !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
outcome_data <- subset(outcome_data_original, !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure), !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
outcome_data <- subset(outcome_data_original, !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
order.ha.name <- order(outcome_data[11], outcome_data$Hospital.Name)
ordered_outcome_data <- outcome_data[order.ha.name, ]
num <- length(ordered_outcome_data$Hospital.Name)
num
tail(ordered_outcome_data)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source("rankall.R")
head(rankall("heart attack", 20), 10)
outcome_data_original <- read.csv("outcome-of-care-measures.csv", na.strings = "Not Available")
outcome_data <- subset(outcome_data_original, !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)) # No need to subset for Pneumonia
outcome_data_original <- read.csv("outcome-of-care-measures.csv", na.strings = "Not Available")
outcome_data <- subset(outcome_data_original, !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
outcome_data[869, ]$State
outcome_data[869, ]
outcome_data_original[869, ]
rankhospital("AK", "heart attack", 20)
rankhospital("AL", "heart attack", 20)
rankhospital("AR", "heart attack", 20)
source("rankhospital.R")
source("rankall.R")
head(rankall("heart attack", 20), 10)
outcome_data_original <- read.csv("outcome-of-care-measures.csv", na.strings = "Not Available")
outcome_data <- subset(outcome_data_original, !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
states_abb <- c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY")
result <- c("hospital", "state")
result <- rbind(result, c(rankhospital(states_abb[1], "heart attack", 20), states_abb[1]))
result
rankhospital(states_abb[1], "heart attack", 20)
c(rankhospital(states_abb[1], "heart attack", 20), states_abb[1])
rankhospital(states_abb[1], "heart attack", 20)
class(rankhospital(states_abb[1], "heart attack", 20))
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source("rankall.R")
head(rankall("heart attack", 20), 10)
states_abb <- c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY")
states_abb <- sort(states_abb)
states_abb
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
result <- head(rankall("heart attack", 20), 10)
colnames(result) <- c("hospital", "state")
result
result[-1, ]
source("rankall.R")
head(rankall("heart attack", 20), 10)
?rownames
head(rankall("heart attack", 20), 10)
source("rankall.R")
result <- head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
outcome_data_original <- read.csv("outcome-of-care-measures.csv", na.strings = "Not Available")
outcome_data <- subset(outcome_data_original, !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
summary(outcome_data$State)
str(outcome_data$State)
colnames(outcome_data$State)
rownames(outcome_data$State)
dim(outcome_data$State)
class(outcome_data$State)
as.character(outcome_data$State)
class(as.character(outcome_data$State))
duplicated(as.character(outcome_data$State))
as.character(outcome_data$State)[duplicated(as.character(outcome_data$State))]
outcome_data_c <- as.character(outcome_data$State)
duplicated(outcome_data_c)
outcome_data_c[duplicated(outcome_data_c)]
unique(outcome_data_c)
class(unique(outcome_data_c))
unique(as.character(outcome_data$State))
source("rankhospital.R")
source("rankall.R")
source("rankall.R")
tail(rankall("heart failure"), 10)
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
rankhospital("WY", "pneumonia", "worst")
outcome_data_original <- read.csv("outcome-of-care-measures.csv", na.strings = "Not Available")
outcome_data <- subset(outcome_data_original, !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), !is.na(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
head(outcome_data[, c(23, 2, 7)])
head(subset(outcome_data[, c(23, 2, 7)], State == "WY"))
order.pnm.name <- order(outcome_data[23], outcome_data$Hospital.Name)
ordered_outcome_data <- outcome_data[order.pnm.name, ]
head(subset(ordered_outcome_data[, c(23, 2, 7)], State == "WY"))
subset(ordered_outcome_data[, c(23, 2, 7)], State == "WY")
outcome_data_original <- read.csv("outcome-of-care-measures.csv", na.strings = "Not Available")
order.pnm.name <- order(outcome_data_original[23], outcome_data_original$Hospital.Name)
ordered_outcome_data <- outcome_data_original[order.pnm.name, ]
subset(ordered_outcome_data[, c(23, 2, 7)], State == "WY")
outcome_data_original <- read.csv("outcome-of-care-measures.csv", na.strings = "Not Available")
colnames(outcome_data_original)
source("rankall.R")
source("rankhospital.R")
head(rankall("heart attack", 20), 10)
rankhospital("TX", "heart failure", 4)
"DETAR HOSPITAL NAVARRO"
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source("best.R")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r
as.character(subset(r, state == "HI")$hospital)
r$hospital
r[hospital]
r["hospital"]
r[["hospital"]]
r <- rankall("pneumonia", "worst")
r
r$hospital
class(r)
data.frame(r)
r <- data.frame(r)
class(R)
class(r)
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
r <- data.frame(r)
as.character(subset(r, state == "NV")$hospital)
2.5^2 / (2.5^2 + 24)
2.064 * 10
126 + 20.64
126 - 20.64
151 + 20.64
151 - 20.64
1.33 / sqrt(10)
-3 / 0.42
-3 / 1.33
1.833 * 0.42 - 3
- 1.833 * 0.42 - 3
- 2.262 * 0.42 - 3
2.262 * 0.42 - 3
test <- 1:5
test
test[1]
class(test[1])
class(test[[1])
class(test[[1]])
class(test[c(1, 2)])
test[c(1, 2)]
fileUrl <- "http://espn.go.com/nfl/team/_/name/bal/baltimore-ravens"
doc <- htmlTreeParse(fileUrl, useInternal=TRUE)
library(XML)
doc <- htmlTreeParse(fileUrl, useInternal=TRUE)
scores <- xpathSApply(doc, "//li[@class='score']", xmlValue)
teams <- xpathSApply(doc, "//li[@class='team-name']", xmlValue)
scores
teams
library(jsonlite)
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
neames(jsonData)
names(jsonData)
names(jsonData$owner)
jsonData$owner$login
myjson <- toJSON(iris, pretty=TRUE)
cat(myjson)
iris2 <- fromJSON(myjson)
head(iris2)
library(data.table)
library(datatable)
install.packages(data.table)
install.packages("data.table")
library(data.table)
DF = data.frame(x=rnorm(9), y=rep(c("a", "b", "c"), each=3), z=rnorm(9))
DF
head(DF, 3)
DT = data.frame(x=rnorm(9), y=rep(c("a", "b", "c"), each=3), z=rnorm(9))
head(DT, 3)
DT = data.table(x=rnorm(9), y=rep(c("a", "b", "c"), each=3), z=rnorm(9))
head(DT, 3)
tables()
DT[2, ]
DT[DT$y=="a"]
DT[c(2, 3)]
DT[, c(2, 3)]
{
x = 1
y = 2
}
k = {print(10); 5}
print(k)
DT[, list(mean(x), sum(z))]
DT[, table(y)]
DT[, w:=z^2]
DT
DT2 <- DT
DT[, y:=2]
DT
head(DT2, n=3)
DT[, m:= {tmp <- (x+z); log2(tmp+5)}]
head(DT, n=3)
DT[, a:=x>0]
head(DT)
DT[, b:= mean(x+w), by=a]
head(DT)
(1.0139136 - 1.3536531) / 2
(1.0139136 + 1.83237670) / 2
(-0.4870745 + 0.70406128) / 2
set.seed(123);
DT <- data.table(x=sample(letters[1:3], 1E5, TRUE))
DT[, .N, by=x]
letters[1:3]
LETTERS[1:3]
DT <- data.table(x=rep(c("a", "b", "c"), each=100), y=rnorm(300))
setkey(DT, x)
DT['a']
DT1 <- data.table(x=c('a', 'a', 'b', 'dt1'), y=1:4)
DT2 <- data.table(x=c('a', 'b', 'dt2'), z=5:7)
DT1
DT2
setkey(DT1, x); setkey(DT2, x)
merge(DT1, DT2)
big_df <- data.frame(x=rnorm(1E6), y=rnorm(1E6))
file <- tempfile()
write.table(big_df, file=file, row.names=FALSE, colnames=TRUE, sep="\t", quote=FALSE)
write.table(big_df, file=file, row.names=FALSE, col.names=TRUE, sep="\t", quote=FALSE)
system.time(fread(file))
system.time(read.table(file, header=TRUE, sep="\t"))
packageVersion("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
ls
ls()
dir()
cd ..
setwd(".. /")
setwd("../")
dir()
setwd("../")
dir()
setwd("..//")
dir()
setwd("gettingAndCleaningData/")
dir()
setwd("hw1/")
ls
dir()
