summarize(g_activity)
g_activity
g_act_sub
?group_by
groups(g_activity)
groups(g_act_sub)
groups(group_by(g_activity, subject, add = TRUE))
g_act_sub <- groups(group_by(g_activity, subject, add = TRUE))
g_act_sub <- group_by(g_activity, subject, add = TRUE)
groups(g_activity)
groups(g_act_sub)
g_act_sub
?summarize
summarize(g_act_sub)
summary(g_act_sub)
?summarize_each
summarise_each(g_act_sub, funs(mean))
summary_activity_sub <- summarise_each(g_act_sub, funs(mean))
summary_activity_sub
# 1. Merge the training set and the test set.
# Read files into dataframes
Xtrain <- read.table(file = "X_train.txt", header = FALSE, sep = "")
Xtest <- read.table(file = "X_test.txt", header = FALSE, sep = "")
ytrain <- read.table(file = "y_train.txt", header = FALSE, sep = "")
ytest <- read.table(file = "y_test.txt", header = FALSE, sep = "")
subtrain <- read.table(file = "subject_train.txt", header = FALSE, sep = "")
subtest <- read.table(file = "subject_test.txt", header = FALSE, sep = "")
# Bind the datasets
train <- cbind(Xtrain, ytrain, subtrain)
test <- cbind(Xtest, ytest, subtest)
all <- rbind(train, test)
# 2. Extracts only the measurements on the mean and standard deviation for each measurement.
# Import features from file
features <- read.table(file = "features.txt", sep = " ")
# Get mean indices
mean_indices <- grep("mean", features$V2)
# Get std indices
std_indices <- grep("std", features$V2)
# Combine the two vectors
mean_std <- c(mean_indices, std_indices)
# Sort the new vector
mean_std <- sort(mean_std)
# Subset the dataset all
data_mean_std <- all[, c(mean_std, 562, 563)]
# 3. Uses descriptive activity names to name the activities in the data set
descrptive_names <- c(as.character(features[mean_std, "V2"]), "activity", "subject")
# 4. Appropriately labels the data set with descriptive variable names.
names(data_mean_std) <- descrptive_names
# 5. From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
library(dplyr)
g_activity <- group_by(data_mean_std, activity)
g_act_sub <- group_by(g_activity, subject, add = TRUE)
summary_activity_sub <- summarise_each(g_act_sub, funs(mean))
summary_activity_sub
dim(all)
dim(data_mean_std)
descrptive_names
write.table(summary_activity_sub, row.name=FALSE)
?write.table
summary_activity_sub
write.table(summary_activity_sub, file = "step5_summary.txt", row.name=FALSE)
getwd()
setwd("/Users/calvinku/sandbox/r")
dir()
read.table("step5data.txt")
review <- read.table("step5data.txt")
head(review)
names(review)
View(g_act_sub)
View(summary_activity_sub)
summary_activity_sub
summary(review)
head(review)
head(review, 20)
head(review$V2, 50)
head(review$V1, 50)
names(review)
dir()
review <- read.table("DatasetHumanActivityRecognitionUsingSmartphones.txt")
names(review)
summary(review)
head(review)
dir()
dir()
review <- read.table("summarized_UCI_HAR.txt")
head(review)
summary(review)
colnames(review)
dir()
review <- read.table("tidy_summary_output.csv")
head(review)
names(review)
0.98 * 0.008 / (0.98 + 0.03)
25/30
((25/30) * 0.3) / 0.65
0.25 / 0.65
20/25
5/35
25/65
.385 + .143
0.25 / 0.75
2/3
library(utils)
choose(5, 1)
choose(5, 1) * choose(17, 8)
noS <- choose(5, 1) * choose(17, 8)
SasP <- choose(17, 8)
SasF <- 8 * choose(17, 7)
noS + SasP + SasF
install.packages('permute')
install.packages('gtools')
perm_without_replacement <- function(n, r){
return(factorial(n)/factorial(n - r))
}
noS <- choose(5, 1) * perm_without_replacement(17, 8)
SasP <- perm_without_replacement(17, 8)
SasF <- perm_without_replacement(17, 7) * 8
noS + SasP + SasF
4/36
5*0.6^4
0.4*5*0.6^4
0.4*5*0.6^4 + 0.6^5
1/10 + 4/15 + 2/15 + 1/15
1 - 0.566667
2/15
(2/15) / 0.566
1/10 + 4/15 + 2/15
(1/10) / 0.566
30 * 0.566
(0.002 * 0.99) / 0.002 + 0.999
(0.002 * 0.99) / (0.002 + 0.999)
0.3 + 0.6 + 0.8 + 0.9
2.6/4
1- 0.65
10^ 4 / 4
10^4 / 10
(0.75186 + 0.82195 + 0.74518 + 0.72591) / 4
library(datasets)
data(cars)
with(cars, plot(speed, dist))
head(cars)
insatall.package(lattice)
install.packages('lattice')
library(lattice)
state <- data.frame(state.x77, region = state.regrion)
state <- data.frame(state.x77, region = state.region)
xyplot(Life.Exp ~ Income | region, data = state, lyout = c(4, 1))
library(ggplot2)
data(mpg)
qplot(displ, hwy, data = mpg)
ls()
dir()
hist(airquality$Ozone)
with(airquality, plot(Wind, Ozone))
airquality <- transform(airquality, Month = factor(Month))
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)")
install_from_swirl("Exploratory Data Analysis")
library('swirl')
install_from_swirl("Exploratory Data Analysis")
swir()
swirl()
quit()
swirl()
head(pollution)
dim(pollution)
with(pollution, summary(pm25))
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm)
boxplot(ppm, col='blue')
abline(h = 12)
hist(ppm, col = 'green')
rug(ppm)
low
high
hist(ppm, col='green', breaks=100)
rug(ppm)
hist(data=ppm, col='green')
hist(ppm, col='green')
abline(v=12, lwd=2)
abline(v=median(ppm), col='magenta', lwd=4)
quantile(ppm)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col='wheat', main="Number of Counties in Each Region")
boxplot(pm25~region, data=pollution, col='red')
par(mfrow=c(2, 1), mar=c(4, 4, 2, 1))
east <- subset(pollution, region=='east')
head(east)
hist(east$pm25, col='green')
wast <- subset(pollution, region=='wast')
wast <- subset(pollution, region=='west')
hist(subset(pollution, region=='west')$pm25, col='green')
with(pollution, plot(latitude, pm25))
abline(lwd=2, lty=2)
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow=c(1, 2), mar=c(5, 4, 2, 1))
west = subset(pollution, region='west')
west <- subset(pollution, region=='west')
plot(west$latitude, west$pm25, main='West (title)')
plot(west$latitude, west$pm25, main='West')
plot(east$latitude, east$pm25, main='East')
?Devices
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
dir()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file="geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist()))
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), 'SWIRL rules!')
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, state, c(4, 1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2, 2))
head(mpg)
dim(mpg)
mpg$model
table(mpg$model)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone, na.rm=TRUE)
summary(airquality$Ozone)
hist(airquality$Ozone)
library(swirl)
swirl()
head(airquality)
xyplot(Ozone ~ Wind, airquality)
xyplot(Ozone ~ Wind, airquality, col='red', pch=8, main="Big Apple Data")
xyplot(Ozone ~ Wind, airquality, pch=8, col='red', main="Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), airquality, layout=c(5, 1))
xyplot(Ozone ~ Wind | Month, airquality, layout=c(5, 1))
p <- xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[['x.limits']]
table(f)
xyplot(y ~ x | f, layout=c(2, 1))
v1
v2
myedit("plot1.R")
source(pathtofile('plot1.R'), local=TRUE)
myedit("plot2.R")
with(pathtofile('plot2.R'), local=TRUE)
with(pathtofile("plot2.R"), local=TRUE)
source(pathtofile('plot2.R'), local=TRUE)
str(diamonds)
table(daimonds$color)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit('myLabels.R')
source(pathtofile('myLabels.R'), local=TRUE)
xyplot(price ~ carat | color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(price ~ carat | color*cut, data=diamonds, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
swirl()
swirl()
sample(colors(), 10)
colorRamp(c('red', 'blue'))
pal <- colorRamp(c('red', 'blue'))
pal(0)
pal(1)
pal(seq(0, 1, len=6))
p1 <- colorRampPalette((c('red', 'blue')))
p1 <- colorRampPalette(c('red', 'blue'))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c('red', 'yellow'))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
colorRampPalette(c('blue', 'green'), alpha = .5)
p3 <- colorRampPalette(c('blue', 'green'), alpha = .5)
p3(5)
plot(x, y, pch=19, col=rgb(0, .5, .5))
plot(x, y, pch=19, col=rgb(0, .5, .5, .3))
cols <- brewer.pal(3, 'BuGn')
showMe(cols)
pal < colorRampPalette(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
str(mpg)
qplot(displ, hwy, mpg)
qplot(mpg$displ, mpg$hwy, mpg)
qplot('displ', 'hwy', mpg)
qplot('displ', 'hwy', data=mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c('point', 'smooth'))
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy, data=mpg, geom='boxplot')
qplot(drv, hwy, data=mpg, geom='boxplot', color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets= . ~ drv)
qplot(hwy, data=mpg, facets= drv ~ ., binwidth=2)
qplot(displ, hwy, data=mpg, geom=c('point', 'smooth'), facets= .~drv)
ggplot(mpg, aes(displ, hwy))
g <- ggplot(mpg, aes(displ, hwy))
g
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(lm)
g + geom_point() + geom_smooth('lm')
g + geom_point() + geom_smooth(method='lm')
g + geom_point() + geom_smooth(method='lm') + facet_grid(.~drv)
g + geom_point() + geom_smooth(method='loess') + facet_grid(.~drv)
g + geom_point() + geom_smooth(method='loess') + facet_grid(.~drv) + ggtitle('Swirl Rules')
g + geom_point() + geom_smooth(method='lm') + facet_grid(.~drv) + ggtitle('Swirl Rules')
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)+
| ggtitle("Swirl Rules!")
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)+ggtitle("Swirl Rules!")
g + geom_point(color='pink', size=4, alpha=1/2)
g + geom_point(size=4, alpha=1/2, aes(color=drv))
g + geom_point(size=4, alpha=1/2, aes(color=drv)) + labs(title="Swirl Rules!", x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color=drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(color=aes(drv), size=2, alpha=1/2) + geom_smooth(size=4, linetype=3, method='lm', se=FALSE)
g + geom_point(aes(color=drv), size=2, alpha=1/2) + geom_smooth(size=4, linetype=3, method='lm', se=FALSE)
g + geom_point(aes(color=drv), size=2, alpha=1/2) + geom_smooth(size=4, linetype=3, method='loess', se=FALSE)
g + geom_point(aes(color=drv)) + theme_bw(base_family='Times')
plot(myx, myy, type='l', ylim=c(-3, 3))
g <- ggplot(testdat, aes(x=myx, y=myy))
g + geom_line(0)
g(0) + geom_line()
g + geom_line()
g + geom_line() + ylim(-3, 3)
g + geom_line() + coord_cartesian(ylim=c(-3, 3))
g <- ggplot(dataset, aes(x=displ, y=hwy, color=factor(year)))
g <- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g + geom_point
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins=TRUE)
g + geom_point() + facet_grid(drv~cyl, margins=TRUE) + geom_smooth(method='lm', se=FALSE, size=2, color='black')
g + geom_point() + facet_grid(drv~cyl, margins=TRUE) + geom_smooth(method='loess', se=FALSE, size=2, color='black')
g + geom_point() + facet_grid(drv~cyl, margins=TRUE) + geom_smooth(method='lm', se=FALSE, size=2, color='black') + labs(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, binwidth=18497/30)
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, geom='density')
qplot(price, data=diamonds, geom='density', color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom_smooth='lm')
qplot(carat, price, data=diamonds, color=cut) + geom_smooth(method='lm')
qplot(carat, price, data=diamonds, color=cut, facets=.~cut) + geom_smooth(method='lm')
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length=4), na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha=1/3) + facet_grid(cut ~ car2)
diamonds[myd, ]
g + geom_point(alpha=1/3) + facet_grid(cut ~ car2) + geom_smooth(method='lm', size=3, color='pink')
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(.~cut)
update.packages(checkBuilt=TRUE, ask=FALSE)
update.packages(checkBuilt=TRUE, ask=FALSE)
sessionInfo()
library(nlme)
install.packages(nlme)
install.packages('nlme')
install.packages("nlme")
library(nlme)
sessionInfo()
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?transform
head(airquality)
str(airquality)
data(airquality)
str(airquality)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
choose(12, 2)
(140 - 115) / (175 - 115)
library(swirl)
swirl()
library(swirl)
swirl()
dist(dataFrame)
hclust(distxy)
hclust(d = distxy)
hc <- hclust(d = distxy)
plot(hc)
ploy(as.dendogram(hc))
ploy(as.dendrogram(hc))
plot(as.dendrogram(hc))
abline(h=1.5, col='blue')
abline(h=4, col='red')
abline(h=.4, col='red')
5
12
abline(h=.05, col='red')
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
choose(15, 2)
66.75 - 43.5
5/ 440
0.4424 + 0.2766 + 0.1162 + 0.0962 + 0.0458 + 0.0229
0.4424 + 0.2766
0.4424 + 0.2766 + 0.1162 + 0.0962
0.4424 + 0.2766 + 0.1162
0.4424 + 0.2766 + 0.1162 + 0.0962
library(swirl)
swirl()
cmat
points(cx, cy, col=c('red', 'orange', 'purple', pch=3, cex=2, lwd=2))
points(cx, cy, col=c('red', 'orange', 'purple'), pch=3, cex=2, lwd=2))
points(cx, cy, col=c('red', 'orange', 'purple'), pch=3, cex=2, lwd=2)
mdist(cx, cy)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust])
play()
cols1
newClust
cols1[newClust]
nxt()
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
play()
head(dataFrame)
nxt()
kmeans(dataFrame, centers=3)
kmObj$iter
play()
kmObj$cluster
kmObj.cluster
nxt()
plot(x, y, col=kmObj$cluster, pch=19, lwd=2)
plot(x, y, col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("black", "red", "green"), pch=3, cex=3, lwd=3)
plot(x, y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
play()
quit()
q()
nxt()
0
q
exit()
main()
0.1162 + 0.0962
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
setwd("~/dsSpecialization/exploratoryDataAnalysis/hw4/")
dir()
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
sum.emissions <- aggregate(Emissions ~ year, NEI, sum)
head(sum.emissions)
?aggregate
tapply(NEI$Emissions, NEI$year, sum)
